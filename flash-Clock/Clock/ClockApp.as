package  {		import flash.display.MovieClip;	import flash.utils.Timer;	import flash.events.TimerEvent;	import flash.events.MouseEvent;		public class ClockApp extends MovieClip 	{				public var hourHand:MovieClip;		public var minuteHand:MovieClip;		public var secondHand:MovieClip;		//public var sunMoonPlate:MovieClip;		//public var cityPlate:MovieClip;					public var timer:Timer;						public var watchDaSound:WatchDaSound;		public var watchDsSound:WatchDsSound;								public var r0:Number;		public var r1:Number;		public var r2:Number;		public var r3:Number;		public var hourOffset:Number;								public function ClockApp() 		{				init();		}						public function init()		{								var date:Date = new Date();						trace(date.hours, date.minutes, date.seconds, date.timezoneOffset/60);						var secondRotation:Number = (date.seconds)*6;			var minuteRotation:Number = (date.minutes)*6;			var hourRotation:Number = (date.hours%12)*30 + (date.minutes/60)*30;			//var sunMoonPlateRotation:Number = -1*((date.hours)%24)*15;						hourHand.rotation = hourRotation;			minuteHand.rotation = minuteRotation;			secondHand.rotation = secondRotation;			//sunMoonPlate.rotation = sunMoonPlateRotation;												//var timeZone:Number = -1*(date.timezoneOffset/60);			//var cityPlateRotation:Number = -1*timeZone*15;			//cityPlate.rotation = cityPlateRotation;			//this.addEventListener(MouseEvent.MOUSE_DOWN, mouseDown);			hourOffset = 0;									watchDaSound = new WatchDaSound();			watchDsSound = new WatchDsSound();									timer = new Timer(1000);			timer.addEventListener(TimerEvent.TIMER, updateTime);			timer.start();								}						public function updateTime(event:TimerEvent):void		{			var date:Date = new Date();						//trace(date.hours, date.minutes, date.seconds);						var secondRotation:Number = (date.seconds)*6;			var minuteRotation:Number = (date.minutes)*6;			var hourRotation:Number = (date.hours%12)*30 + (date.minutes/60)*30;			//var sunMoonPlateRotation:Number = -1*((date.hours)%24)*15;									hourHand.rotation = hourRotation + hourOffset;			minuteHand.rotation = minuteRotation;			secondHand.rotation = secondRotation;			//sunMoonPlate.rotation = sunMoonPlateRotation - hourOffset/2;						//watchDsSound.play();		}						public function mouseDown(event:MouseEvent):void		{			//trace(event.stageX, event.stageY);			this.addEventListener(MouseEvent.MOUSE_MOVE, mouseMove);			this.addEventListener(MouseEvent.MOUSE_UP, mouseUp);						//r0 = cityPlate.rotation;			r3 = hourOffset;			r1 = Math.atan2((event.stageY - 360), (event.stageX - 640))*180/Math.PI+450;			//trace(r1%360);						//hourOffset = 0;								}				public function mouseMove(event:MouseEvent):void		{			//trace(event.stageX, event.stageY);			r2 = Math.atan2((event.stageY - 360), (event.stageX - 640))*180/Math.PI+450;			//trace(r2%360);						var h1:int = hourHand.rotation/30+12;						//cityPlate.rotation = r0 + r2 - r1;						hourOffset = r3 -1*(r2-r1)*2;			var date:Date = new Date();			var hourRotation:Number = (date.hours%12)*30 + (date.minutes/60)*30;			//var sunMoonPlateRotation:Number = -1*((date.hours)%24)*15;			hourHand.rotation = hourRotation + hourOffset;			//sunMoonPlate.rotation = sunMoonPlateRotation - hourOffset/2;						//var h2:int = hourHand.rotation/30+12;			//if(h1 != h2)			//{			//	watchDaSound.play();				//}								}				public function mouseUp(event:MouseEvent):void		{			this.removeEventListener(MouseEvent.MOUSE_MOVE, mouseMove);			this.removeEventListener(MouseEvent.MOUSE_UP, mouseUp);		}			}	}